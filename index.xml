<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Living on the Edge :: Codetector on Codetector :: Yaotian Feng</title>
    <link>https://codetector.org/</link>
    <description>Recent content in Living on the Edge :: Codetector on Codetector :: Yaotian Feng</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Jul 2020 00:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://codetector.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hakutaku: SMP on x86-64</title>
      <link>https://codetector.org/post/hakutaku/smp/</link>
      <pubDate>Thu, 30 Jul 2020 00:00:00 -0400</pubDate>
      
      <guid>https://codetector.org/post/hakutaku/smp/</guid>
      <description>This is one post in my blog series about developing an Operating System for the x86-64 platform in Rust. I aim to cover a small topic in each post along with some code samples to get you started if you are also interested in doing such a project. The complete project is on Github
Multi-core Multi-core often sounds like a scary topic for most hobbyist OS developers. Today we will tackle this problem together in our Rust OS, Hakutaku.</description>
    </item>
    
    <item>
      <title>ASRock RGB Driver VR</title>
      <link>https://codetector.org/post/asrock_rgb_driver/</link>
      <pubDate>Sat, 20 Jun 2020 00:00:00 -0400</pubDate>
      
      <guid>https://codetector.org/post/asrock_rgb_driver/</guid>
      <description>TODO</description>
    </item>
    
    <item>
      <title>IntelliJ Plugin for TableGen</title>
      <link>https://codetector.org/post/intellij_tablegen_plugin/</link>
      <pubDate>Sun, 22 Dec 2019 00:46:18 +0800</pubDate>
      
      <guid>https://codetector.org/post/intellij_tablegen_plugin/</guid>
      <description>I recently been working on creating a LLVM backend for the Z80 CPU architechture. (A blog series to come) In the process of describing the architechture, LLVM use a DSL called TableGen Target Description Language to describe the target architechture. Everything from registers, instructions to calling conventions are first described in this TableGen format. Although there are existing plugins for VSCode, Vim, and Emacs, my main IDE for working on the project is CLion.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://codetector.org/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codetector.org/about/</guid>
      <description>This blog is a place where I share my random thoughts and stuff I recently worked on. I created this blog hoping it would be helpful to others as well as leaving some notes for myself to look back in the future.
I am currently a undergraduate student studying CS at Georgia Tech. Interested in programming, compilers, operating systems, securiy, processor design, FPGAs and HPC related tech.
I usually appare on the internet as Codetector.</description>
    </item>
    
  </channel>
</rss>